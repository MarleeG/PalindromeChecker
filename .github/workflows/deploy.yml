name: Deploy React app to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Figure out where package.json lives: client/ or repo root
      - name: Detect app directory
        id: detect
        run: |
          if [ -f "client/package.json" ]; then
            echo "APP_DIR=client" >> $GITHUB_ENV
          else
            echo "APP_DIR=." >> $GITHUB_ENV
          fi
          echo "App directory: ${APP_DIR}"

      - name: Setup Node (16.x) with npm cache
        uses: actions/setup-node@v4
        with:
          node-version: 16.20.2
          cache: npm
          # use wildcard so cache never fails if app isn't in client/
          cache-dependency-path: '**/package-lock.json'

      - name: Install deps
        working-directory: ${{ env.APP_DIR }}
        run: npm ci

      - name: Build
        working-directory: ${{ env.APP_DIR }}
        run: npm run build

      # Optional: GitHub Pages SPA fallback for React Router
      - name: SPA fallback (index -> 404)
        run: |
          if [ -d "${{ env.APP_DIR }}/build" ]; then
            cp "${{ env.APP_DIR }}/build/index.html" "${{ env.APP_DIR }}/build/404.html"
          fi

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.APP_DIR }}/build

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4